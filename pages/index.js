import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";
import { useState, useEffect } from "react";
import { checkAuthentication, removeLocalStorage } from "../actions/auth";
import { getAllTodos } from "../actions/todo";
import "../styles/Home.module.css";

export default function Home() {
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [userData, setUserData] = useState({});
  const [todos, setTodos] = useState([]);
  // const [loading, setLoading] = useState(true);
  const router = useRouter();

  const LoadTodos = async () => {
    const allTodos = await getAllTodos();

    if (allTodos.status === 200) {
      const todoData = await allTodos.json();
      console.log(todoData.tasks);
      setTodos(todoData.tasks);
    } else {
      alert("Not able to fetch tasks! Error Occurred");
    }
  };

  useEffect(() => {
    const response = async () => {
      const resjson = await checkAuthentication();
      setUserData(resjson.user);
      if (resjson.userAuthenticated) {
        setIsAuthenticated(true);
        LoadTodos();
        //await LoadTodos();
        // setLoading(false);
      } else {
        router.push("/login");
      }
    };
    response();
  }, []);

  const handleLogout = () => {
    alert("are you sure want to log out");
    setIsAuthenticated(!removeLocalStorage("auth-token"));
    router.push("/login");
  };

  return (
    <>
      {isAuthenticated ? (
        <div>
          <Head>
            <title>Todo App</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>

          <div>
            <label>Hey {userData.name.toUpperCase()} !</label>

            <button
              className="bg-red-500 px-3 py-1 rounded-sm text-white font-semibold"
              onClick={handleLogout}
            >
              Logout
            </button>
          </div>

          <main>
            {todos.map((tasks) => {
              return (
                <div key={tasks._id}>
                  <h3>{tasks.task}</h3>
                  <h3>{tasks.isCompleted}</h3>
                  <h3>{tasks.date}</h3>
                </div>
              );
            })}
          </main>
        </div>
      ) : (
        <div>Loading.........</div>
      )}
    </>
  );
}
